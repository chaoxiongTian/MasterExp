第一周：
田超雄本周工作：
1. 做小论文的破解实验，需要补充22个网站的验证码破解数据。这周开始制作训练样本，进行训练分割，并计算准确率。本周完成五个网站数据的统计。
2. 通过读论文查资料寻找安全验证码的方式。使得之前可用模型失效的测试样本叫做对抗样本，初步想法是在不改变训练集和模型的前提下生成对抗样本，生成的理论是：正常图片识别分类器的训练过程是保持样本不变，通过反向传播更新模型参数来提高对于标签的距离，而生成对抗样本是需要保持模型的参数不变通过对图片每个像素值计算梯度并更新来提高对于标签的距离。从而产生一张更新之后的图片。下周会进行代码实现，比测算准确情况。
3. 构思论文框架，把验证码分为三类（字符少且少粘连，字符少且多粘连，字符多）通过不同的方法来进行分割。
下周任务：
继续完成实验部分；完成对抗样本生成部门代码实现。

第二周：
田超雄本周工作:
1. 学习FGSM和DeepFool两种经典的对抗样本生成方法，并通过FGSM生成MNIST（手写识别体）对抗样本，不过效果不太好生成的对抗样本图片中含有比较明显的干扰信息。
2. 思考如何将对抗样本用于验证码防御场景中，对抗样本往往针对的是一个已有的模型，若攻击者把收集到对抗验证码和原始验证码一起重新训练，那么对抗验证码的安全性便会减低。
3. 继续制作四篇顶会中实验部分的验证码，使用我们的方法进行破解。
下周任务：
提高对抗样本的生成质量；思考对抗样本和GAN网络的结合。

第三周:
田超雄本周工作：
1. 进行验证码分割实验。开始制作训练样本，进行训练再分割，并计算准确率。本周完成五个网站数据的统计。
2. 调试对抗样本的生成代码，根据自己训练的CNN模型生成验证码的对抗样本，生成的质量还有待提高。
3. 阅读对抗样本相关的文章，学习如何提高对抗样本的泛化作用。
下周任务：
提高对抗样本的质量，对安全验证码的生成形成整d体完整的思路。

第四周:
田超雄本周工作：
1.继续进行验证码分割实验。本周针对的是Baidu2016 qq2013空心，亚马逊空心和captcha.net四个网站的验证码。
2. 重构分割算法代码实现，提高一些分割算法的细节问题，想从分割算法上提高分割的效果，从而提高整体的准确率。
3. 阅读对抗样本相关的文章，从github上找到可以借鉴的网络，在网络输入和对抗样本的保存模式上还需要调整。
下周任务：
提高对抗样本的质量，对安全验证码的生成形成整体完整的思路。

第五周:
田超雄本周工作:
1. 从实现细节上优化三种分割算法(连通域分割算法，投影分割算法，滴水分割算法)，希望在分割过程中尽量较少准确率的损失。
2. 在识别阶段使用三种不同的经典卷积神经网络（ImageNet，googleNet，LeNet）对分割好的验证码进行重新识别，相比之前五层的LeNet部分结果有所提升。
3. 对于对抗样本生成的整体思路进行整理，需要测试两种生成算法的效果。一种是：无目标的单步生成算法（FGSM）一种是：无目标的迭代生成算法（DeepFool）。本周查文献了解两种算法的实现，并查找相关实现代码进行调试。
下周任务：
调试完成两种生成算法，并两种生成的结果进行实验评估。

第六周:
田超雄本周工作:
1. 阅读论文“Explaining and Harnessing Adversarial Examples”学习FGSM算法的实现细节，然后修改完成FGSM算法。现在通过添加扰动因子，可以在原网络模型上完成对抗样本的生成。参数为0.3时候对于一个字符的验证码干扰准确率能达到90%.
2. 制作reCaptcha(2013)和reCaptcha(2011)的验证码使用拉伸分割的思路进行实验，该验证码字符较长，准确率还有上升的空间。
下周任务：
调试完成DeepFool算法，和FGSM算法的效果进行对比。

rm *captcha.png
rename "s/_captcha*//" *.png
rename "s/ generated//" *.png

python CaptchaGenerate/captcha_generate.py --tar test --label Baidu_off_200_labels.txt
python CaptchaGenerate/captcha_generate.py --label Blizzard_off_2000_labels.txt